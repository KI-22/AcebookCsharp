@model acebook.Models.User
@using acebook.Models
@{
    var errorMessage = TempData["ErrorMessage"];
    var successMessage = TempData["SuccessMessage"];
}
@if (errorMessage != null)
{
    <div class="alert alert-danger text-center">
        @errorMessage
    </div>
}
@if (successMessage != null)
{
    <div class="alert alert-success text-center">
        @successMessage
    </div>
}
<div class="profile-buttons">
    @if (Context.Session.GetString("Username") == Model.Name)
    {
        <a href="@Url.Action("Edit", new { username = Model.Name })" class="btn btn-primary">Edit Profile</a>
        <a href="@Url.Action("Index", "Friendships")" class="btn btn-primary">Friends</a>
    }


    <form action="@Url.Action("Logout", "Sessions")" method="post" style="display:inline;">
        <button type="submit" class="btn btn-secondary">Logout</button>
    </form>
</div>

<div class="profile-container-profile">
    <div class="user-info-profile">
        @if (!string.IsNullOrEmpty(Model.profilePicture))
        {
            <img src="@Model.profilePicture" alt="@Model.Name's Profile Picture" class="profile-pic-profile" />
        }
        else
        {
            <p>No profile picture set.</p>
        }
        <h1 class="user-name-profile">@Model.Name</h1>
        <a href="@Url.Action("Index", "Friendships")" class="btn btn-primary">Friends</a>
    </div>
@if (Context.Session.GetString("Username") == Model.Name)
{
    <div class="post-form-profile">
        <form action="/posts" method="post" enctype="multipart/form-data">
            <input type="hidden" name="ReturnUrl" value="@Context.Request.Path.Value" />
            
            <div class="input-container-profile">
                <input type="text" id="PostText" name="PostText" placeholder="What's on your mind?" class="post-input-profile" />
            </div>

            <div class="image-upload-profile">
                <label for="PostImageUrl"></label>
                <input type="text" id="PostImageUrl" name="PostImageUrl" placeholder="Enter image URL" class="image-input-profile" />
                <span>or</span>
                <input type="file" id="PostImageFile" name="PostImageFile" class="file-input-profile" />
                <button type="submit" id="submit" class="post-btn-profile">Post</button>
            </div>
        </form>
    </div>
}


    <div class="posts-container-profile">
    <h2>@Model.Name's Posts</h2>
    @{
        var posts = ViewBag.CurrentUsersPosts as IEnumerable<Post>;
    }
    @if (posts != null && posts.Any())
    {
        <ul>
            @foreach (var post in posts)
            {
                <li class="post-container-profile">
                    <div class="user-info-profile">
                        <a href="@Url.Action("Profile", "Users", new { username = post.User?.Name })" class="post-link">
                        <img src="@(string.IsNullOrEmpty(post.User?.profilePicture) ? "/images/default-profile.png" : post.User.profilePicture)" 
                            alt="User Profile Picture" class="profile-pic" />
                        <p class="user-name">@post.User?.Name</p>
                        </a>
                    </div>
                    <div class="post-content-profile">
                        <a href="@Url.Action("GetPost", "Posts", new { postId = post.Id })" class="post-link">
                            <p class="post-text-profile">@post.PostText</p>
                            @if (!string.IsNullOrEmpty(post.PostImage))
                            {
                                <img src="@post.PostImage" alt="Post Image" class="post-image-profile" />
                            }
                        </a>
                        <p class="post-meta-profile">Posted on: @post.CreatedAt.ToString("MMMM dd, yyyy - hh:mm tt")</p>
            @* ... *@

                        <div>
                            @{
                                var likesCount = ViewBag.PostLikesCount as Dictionary<int, int>;
                                var dictLikeUnlike = ViewBag.LikeUnlike as Dictionary<int, List<int>>;

                                if (dictLikeUnlike == null){
                                    Console.WriteLine("view - dictLikeUnlike - NULL");
                                }
                                else{
                                    Console.WriteLine("view - dictLikeUnlike - NOT null");
                                }
                            }
                            
                            <form method="post" asp-controller="Likes" asp-action="LikePost" asp-route-postId="@post.Id">
                                @{
                                    bool hasLiked = dictLikeUnlike != null && dictLikeUnlike.ContainsKey(post.Id) && dictLikeUnlike[post.Id].Contains(ViewBag.CurrentUser.Id);
                                    var likeOrUnlike = hasLiked ? "Unlike" : "Like";
                                }
                                <button type="submit" class="btn btn-primary">@likeOrUnlike</button>
                                @* <button type="submit" class="btn btn-primary">testing</button> *@
                            </form>
                            <div class="reactions-profile">
                                <div class="like-count">
                                    @{
                                        if (likesCount != null)
                                        {   
                                            if (likesCount.ContainsKey(post.Id))
                                            {
                                                <span>üëç@likesCount[post.Id] likes</span>
                                            }
                                            else{
                                                <span>üëç-1 likes</span>
                                            }
                                        }
                                        else 
                                        {
                                            <span>üëç-2 likes</span>
                                        }
                                    }
                                </div>
                            </div>    
                        @* </div> *@


            @* ... *@
                            <div class="comment-count">
                                <span>0 comments</span> 
                            </div>
                
                            @if (Context.Session.GetInt32("user_id") == post.UserId)
                            {
                                <form asp-controller="Posts" asp-action="Delete" method="post" asp-route-id="@post.Id">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="ReturnUrl" value="@Context.Request.Path" />
                                    <button type="submit" class="delete-button-profile">Delete Post</button>
                                </form>
                            }
                        </div>

                        
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No posts available.</p>
    }
</div>


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .post-link, .post-link:visited, .post-link:active, .post-link:hover {
        all: unset !important;
        cursor: pointer !important;
        display: block !important;
    }
</style>
