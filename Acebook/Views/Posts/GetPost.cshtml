@using acebook.Models
@model acebook.Models.Post

@{
    var errorMessage = TempData["ErrorMessage"];
    var successMessage = TempData["SuccessMessage"];
}

@if (errorMessage != null)
{
    <div class="alert alert-danger text-center">
        @errorMessage
    </div>
}

@if (successMessage != null)
{
    <div class="alert alert-success text-center">
        @successMessage
    </div>
}

<div class="profile-buttons">
    @if (Context.Session.GetString("Username") == ViewBag.ProfileUserName)
    {
        <a href="@Url.Action("Profile", "Users", new { username = ViewBag.ProfileUserName })" class="btn btn-primary">Profile</a>
    }
    <form action="@Url.Action("Logout", "Sessions")" method="post" style="display:inline;">
        <button type="submit" class="btn btn-secondary">Logout</button>
    </form>
</div>

<!-- üìå Main Post Container -->
<div class="post-container-getpost">
    <div class="user-info-getpost">
        <img src="@(string.IsNullOrEmpty(ViewBag.Post.User?.profilePicture) ? "/images/default-profile.png" : ViewBag.Post.User.profilePicture)" 
            alt="User Profile Picture" class="profile-pic-getpost" />
        <p class="user-name-getpost">@ViewBag.Post.User?.Name</p>
    </div>

    <!-- üìù Post Content -->
    <div class="post-content-getpost">
        <p>@ViewBag.Post.PostText</p>
        @if (!string.IsNullOrEmpty(ViewBag.Post.PostImage))
        {
            <img src="@ViewBag.Post.PostImage" alt="Post Image" class="post-image-getpost" />
        }
        <p class="post-meta-date-getpost">Posted on: @ViewBag.Post.CreatedAt.ToString("dd MMM yyyy, HH:mm")</p>
    </div>

    <!-- üì© Like, Comment, Delete Section -->
    <div class="like-section-getpost">
        <form method="post" asp-controller="Likes" asp-action="@((ViewBag.PostLikeUnlike as string) == "Like" ? "LikePost" : "UnlikePost")" asp-route-postId="@ViewBag.Post.Id" asp-route-returnUrl="@ViewBag.CurrentURL">
            <button type="submit" class="like-btn-getpost">@ViewBag.PostLikeUnlike</button>
        </form>

        <div class="like-count">
            <span>üëç @ViewBag.PostLikesCount likes</span>
            <span>üí¨ @ViewBag.PostCommentsCount comments</span>
        </div>

        @if (Context.Session.GetInt32("user_id") == ViewBag.Post.UserId)
        {
            <form action="@Url.Action("Delete", "Posts", new { id = ViewBag.Post.Id })" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="ReturnUrl" value="@Context.Request.Path" />
                <button type="submit" class="delete-button-getpost" onclick="return confirm('Are you sure you want to delete this post?')">Delete Post</button>
            </form>
        }
    </div>
</div>

<!-- üìù Comment Form -->
<div class="comment-form-getpost">
    <form action="@Url.Action("CreateComment", "Comments", new { postId = ViewBag.Post.Id })" method="post">
        <input type="hidden" name="PostId" value="@ViewBag.Post.Id" />
        <div class="input-container-comment-getpost">
            <input type="text" name="Content" placeholder="Write a comment..." required class="comment-input-getpost" />
        </div>
        <button type="submit" class="comment-btn-getpost">Comment</button>
    </form>
</div>

<!-- üó®Ô∏è Comments Section -->
<div class="posts-container-profile-getpost">
    <h2>Comments</h2>
    @{ var sortedComments = Model.Comments.OrderByDescending(c => c.CreatedAt).ToList(); }
    @if (sortedComments != null && sortedComments.Any())
    {
        <ul>
            @foreach (var comment in sortedComments)
            {
                <li class="post-container-profile-getpost">
                    <div class="user-info-profile-getpost">
                        <img src="@(string.IsNullOrEmpty(comment.User?.profilePicture) ? "/images/default-profile.png" : comment.User.profilePicture)" 
                            alt="Profile" class="profile-pic-profile-getpost" />
                        <span class="user-name-profile-getpost">@comment.User?.Name</span>
                    </div>
                    <div class="post-text-profile-getpost">
                        <p>@comment.Content</p>
                        <p class="post-meta-profile-getpost">Commented on: @comment.CreatedAt.ToString("MMMM dd, yyyy - hh:mm tt")</p>
                    </div>
                    @if (comment.UserId == Context.Session.GetInt32("user_id"))
                    {
                        <form method="post" action="/posts/@comment.PostId/comments/@comment.Id/delete">
                            <button type="submit" class="delete-button-comment-getpost" onclick="return confirm('Are you sure you want to delete this comment?')">Delete Comment</button>
                        </form>
                    }
                </li>
            }
        </ul>
    }
    else
    {
        <p>No comments available.</p>
    }
</div>
