@using acebook.Models
@model acebook.Models.Post

@{
    var errorMessage = TempData["ErrorMessage"];
}

@if (errorMessage != null)
{
    <div class="alert alert-danger text-center">
        @errorMessage
    </div>
}

<div class="profile-buttons">
    @if (Context.Session.GetString("Username") == ViewBag.ProfileUserName)
    {
        <a href="@Url.Action("Profile", "Users", new { username = ViewBag.ProfileUserName })" class="btn btn-primary">Profile</a>
    }
    <form action="@Url.Action("Logout", "Sessions")" method="post" style="display:inline;">
        <button type="submit" class="btn btn-secondary">Logout</button>
    </form>
</div>
<div class="post-container">
    <div class="user-info">
        <img src="@(string.IsNullOrEmpty(ViewBag.Post.User?.profilePicture) ? "/images/default-profile.png" : ViewBag.Post.User.profilePicture)" 
            alt="User Profile Picture" class="profile-pic" />
        <p class="user-name">@ViewBag.Post.User?.Name</p>
    </div>
    <div class="post-content">
        <p class="post-text">@ViewBag.Post.PostText</p>
        @if (!string.IsNullOrEmpty(ViewBag.Post.PostImage))
        {
            <img src="@ViewBag.Post.PostImage" alt="Post Image" class="post-image" />
        }
        <p class="post-meta-date">Posted on: @ViewBag.Post.CreatedAt.ToString("dd MMM yyyy, HH:mm")</p>

    <div>
        <div class="like-section">
                @{
                    var likeOrUnlike = ViewBag.PostLikeUnlike as string;
                    string methodLikeUnlike;

                    if (likeOrUnlike == "Like")
                    {
                        methodLikeUnlike = "LikePost";
                    }
                    else
                    {
                        methodLikeUnlike = "UnlikePost";
                    }
                }
                <form method="post" asp-controller="Likes" asp-action="@methodLikeUnlike" asp-route-postId="@ViewBag.Post.Id" asp-route-returnUrl="@ViewBag.CurrentURL">
                    <button type="submit" class="btn btn-primary">@likeOrUnlike</button>
                </form>
                <div class="like-count">
                    @{
                        if (@ViewBag.PostLikesCount != null)
                        { 
                        <span>üëç@ViewBag.PostLikesCount likes</span>
                        }
                        else{
                            Console.WriteLine("@ViewBag.PostLikesCount is NULL");
                        }
                    }
                </div>
        </div>
    </div>
</div>

<div class="=comment-form">
    <form action="@Url.Action("CreateComment", "Comments", new { postId = ViewBag.Post.Id })" method="post">
        <input type="hidden" name="PostId" value="@ViewBag.Post.Id" />
        <div class="input-container-comment">
            <input type="text" name="Content"placeholder="Write a comment..." required class="comment-input" />
        </div>
        <button type="submit" class="comment-btn">Comment</button>
    </form>

</div>
<div class="posts-container-profile">
    <h2>Comments</h2>

    @{ var sortedComments = Model.Comments.OrderByDescending(c => c.CreatedAt).ToList(); }
    @if (sortedComments != null && sortedComments.Any())  // ‚úÖ Use Model instead of ViewBag
    {
        <ul>
            @foreach (var comment in sortedComments)
            {
                <li class="post-container-profile">
                    <div class="user-info-profile">
                        <img src="@(string.IsNullOrEmpty(comment.User?.profilePicture) ? "/images/default-profile.png" : comment.User.profilePicture)" alt="Profile" class="profile-pic-profile" />
                        <span class="user-name-profile">@comment.User?.Name</span>
                    </div>
                    <div class="post-content-profile">
                        <p class="post-text-profile">@comment.Content</p>
                        <p class="post-meta-profile">Commented on: @comment.CreatedAt.ToString("MMMM dd, yyyy - hh:mm tt")</p>
                    </div>
                </li>
            }
        </ul>
    }
    else
    {
        <p>No comments available.</p>
    }
</div>